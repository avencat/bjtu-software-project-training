[  {    "type": "post",    "url": "/comments",    "title": "Create a Comment.",    "name": "CreateComment",    "group": "Comment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>[Mandatory] Content of the Comment.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "post_id",            "description": "<p>[Mandatory] ID of the Post that will contain the comment.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/comments\", {\n\n   method: 'POST',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"content\": \"Lorem ipsum comment...\",\n     \"post_id\": 1\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n  \"status\": \"success\",\n  \"comment_id\": 1,\n  \"message\": \"Inserted one comment to post 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment"  },  {    "type": "delete",    "url": "/comments/:id",    "title": "Delete a Comment.",    "name": "DeleteComment",    "group": "Comment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>[Mandatory] ID of the Comment.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/comments/\" + some_comment_id, {\n\n   method: 'DELETE',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Deleted comment 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment"  },  {    "type": "get",    "url": "/comments/:id",    "title": "Request specific Comment.",    "name": "GetComment",    "group": "Comment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>[Optional] Comment unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/comments/\" + some_comment_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Comment.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": 1,\n    \"content\": \"Lorem ipsum...\",\n    \"post_id\": 1,\n    \"author_id\": 1,\n    \"created\": DATE,\n    \"updated\": DATE\n  },\n  \"message\": \"Retrieved Comment 1\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "CommentNotFound",            "description": "<p>The id of the Comment was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Comment not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment"  },  {    "type": "get",    "url": "/comments",    "title": "Request Comments list.",    "name": "GetComments",    "group": "Comment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "post_id",            "description": "<p>[Optional] Post unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/comments?post_id=\" + some_post_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Comments.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"content\": \"Lorem ipsum...\",\n      \"post_id\": 1,\n      \"author_id\": 1\n    },\n    {\n      \"id\": 2,\n      \"content\": \"I love node\",\n      \"post_id\": 1,\n      \"author_id\": 1\n    }\n  ],\n  \"message\": \"Retrieved comments\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "CommentNotFound",            "description": "<p>The id of the Comment was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Comments not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment"  },  {    "type": "put",    "url": "/comments/:id",    "title": "Update a Comment.",    "name": "UpdateComment",    "group": "Comment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>[Mandatory] New content of the Comment.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>[Mandatory] ID of the Comment.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/comments/\" + some_comment_id, {\n\n   method: 'PUT',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"content\": \"Lorem ipsum comment updated...\"\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Updated comment 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment"  },  {    "type": "post",    "url": "/friendships",    "title": "Create a Friendship.",    "name": "CreateFriendship",    "group": "Friendship",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "following_id",            "description": "<p>[Mandatory] Friendship unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/friendships\", {\n\n   method: 'POST',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"following_id\": user_to_follow_id\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n  \"status\": \"success\",\n  \"friendship_id\": 1,\n  \"message\": \"Inserted one friendship from user 1 to user 2\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/friendships.js",    "groupTitle": "Friendship"  },  {    "type": "delete",    "url": "/friendships/:id",    "title": "Delete a Friendship.",    "name": "DeleteFriendship",    "group": "Friendship",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>[Mandatory] Friendship unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/friendships/\" + friendship_id, {\n\n   method: 'DELETE',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Deleted friendship 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/friendships.js",    "groupTitle": "Friendship"  },  {    "type": "get",    "url": "/friendships",    "title": "Request Friendships of the current logged in user list.",    "name": "GetFrienships",    "group": "Friendship",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "following_id",            "description": "<p>[Optional] Followed User unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example 1:",        "content": "fetch(\"http://localhost:3001/friendships\", {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      },      {        "title": "Fetch example 2:",        "content": "fetch(\"http://localhost:3001/friendships?following_id=\" + some_user_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Friendships.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"following_id\": 42,\n      \"follower_id\": 1,\n      \"following_date\": date,\n      \"user\": {\n        \"user_id\": 42,\n        \"login\": \"aze_90\",\n        \"firstname\": \"m\",\n        \"lastname\": \"lol\"\n      }\n    },\n    {\n      \"id\": 1,\n      \"following_id\": 42,\n      \"follower_id\": 2,\n      \"following_date\": date,\n      \"user\": {\n        \"user_id\": 42,\n        \"login\": \"aze_90\",\n        \"firstname\": \"m\",\n        \"lastname\": \"lol\"\n      }\n    }\n  ],\n  \"message\": \"Retrieved posts\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PostNotFound",            "description": "<p>The id of the Post was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Posts not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/friendships.js",    "groupTitle": "Friendship"  },  {    "type": "post",    "url": "/likeComments",    "title": "Create a Like on a Comment.",    "name": "CreateLikeComment",    "group": "LikeComment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "comment_id",            "description": "<p>[Mandatory] ID of the Comment to like.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/likeComments\", {\n\n   method: 'POST',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"comment_id\": 1\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n  \"status\": \"success\",\n  \"comment_like_id\": 1,\n  \"message\": \"Inserted one like to comment 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/likeComments.js",    "groupTitle": "LikeComment"  },  {    "type": "delete",    "url": "/likeComments/:id",    "title": "Delete a Like on a Comment.",    "name": "DeleteLikeComment",    "group": "LikeComment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>[Mandatory] ID of the LikeComment.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/likeComments/\" + some_like_comment_id, {\n\n   method: 'DELETE',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Deleted likeComment 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/likeComments.js",    "groupTitle": "LikeComment"  },  {    "type": "get",    "url": "/likeComments",    "title": "Request Likes list on a comment.",    "name": "GetLikeComments",    "group": "LikeComment",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "comment_id",            "description": "<p>[Mandatory] Comment unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/likeComments?comment_id=\" + some_comment_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the LikeComments.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"comment_id\": 1,\n      \"user_id\": 1\n    },\n    {\n      \"id\": 2,\n      \"comment_id\": 1,\n      \"user_id\": 2\n    }\n  ],\n  \"message\": \"Retrieved Likes of Comment\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "CommentNotFound",            "description": "<p>The id of the LikeComment was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"LikeComments not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/likeComments.js",    "groupTitle": "LikeComment"  },  {    "type": "post",    "url": "/likes",    "title": "Create a Like.",    "name": "CreateLike",    "group": "Like",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "post_id",            "description": "<p>[Mandatory] ID of the Post to like.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/likes\", {\n\n   method: 'POST',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"post_id\": 1\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n  \"status\": \"success\",\n  \"like_id\": 1,\n  \"message\": \"Inserted one like to post 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/likes.js",    "groupTitle": "Like"  },  {    "type": "delete",    "url": "/likes/:id",    "title": "Delete a Like.",    "name": "DeleteLike",    "group": "Like",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>[Mandatory] ID of the Like.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/likes/\" + some_like_id, {\n\n   method: 'DELETE',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Deleted like 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/likes.js",    "groupTitle": "Like"  },  {    "type": "get",    "url": "/likes",    "title": "Request likes list.",    "name": "GetLikes",    "group": "Like",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "post_id",            "description": "<p>[Mandatory] Post unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/likes?post_id=\" + some_post_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Likes.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"post_id\": 1,\n      \"user_id\": 1\n    },\n    {\n      \"id\": 2,\n      \"post_id\": 1,\n      \"user_id\": 2\n    }\n  ],\n  \"message\": \"Retrieved likes\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "CommentNotFound",            "description": "<p>The id of the Like was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Likes not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/likes.js",    "groupTitle": "Like"  },  {    "type": "post",    "url": "/posts",    "title": "Create a Post.",    "name": "CreatePost",    "group": "Post",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>[Mandatory] Content of the Post.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/posts\", {\n\n   method: 'POST',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"content\": \"Lorem ipsum...\"\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n  \"status\": \"success\",\n  \"post_id\": 1,\n  \"message\": \"Inserted one post for user 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/posts.js",    "groupTitle": "Post"  },  {    "type": "delete",    "url": "/posts/:id",    "title": "Delete a Post.",    "name": "DeletePost",    "group": "Post",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Post unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/posts/\" + post_id, {\n\n   method: 'DELETE',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Deleted post 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/posts.js",    "groupTitle": "Post"  },  {    "type": "get",    "url": "/posts/:id",    "title": "Request specific Post information.",    "name": "GetPost",    "group": "Post",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Post unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/posts/\" + post_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the post.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": 1,\n    \"content\": \"Lorem ipsum...\",\n    \"author_id\": 1,\n  },\n  \"message\": \"Retrieved post 1\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PostNotFound",            "description": "<p>The id of the Post was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Post not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/posts.js",    "groupTitle": "Post"  },  {    "type": "get",    "url": "/posts",    "title": "Request Posts list.",    "name": "GetPosts",    "group": "Post",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "author_id",            "description": "<p>[Optional] Author unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/posts?author_id=\" + some_user_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Posts.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"content\": \"Lorem ipsum...\",\n      \"author_id\": 1\n    },\n    {\n      \"id\": 2,\n      \"content\": \"I love node\",\n      \"author_id\": 1\n    }\n  ],\n  \"message\": \"Retrieved posts\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PostNotFound",            "description": "<p>The id of the Post was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Posts not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/posts.js",    "groupTitle": "Post"  },  {    "type": "get",    "url": "/posts/comments",    "title": "Request Posts list with comments.",    "name": "GetPostsWithComments",    "group": "Post",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "author_id",            "description": "<p>[Optional] Author unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch without author_id example:",        "content": "fetch(\"http://localhost:3001/posts/comments\" {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      },      {        "title": "Fetch with author_id example:",        "content": "fetch(\"http://localhost:3001/posts/comments?author_id=\" + some_user_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Posts with comments.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n       \"id\": 1,\n       \"content\": \"Lorem ipsum...\",\n       \"likes_nb\": \"0\",\n       \"comments_nb\": \"3\",\n       \"created\": \"2017-10-30T16:18:43.806Z\",\n       \"updated\": \"2017-10-30T16:18:43.806Z\",\n       \"comments\": [\n         {\n            \"id\": 1,\n            \"content\": \"Lorem ipsum bis...\",\n            \"post_id\": \"1\",\n            \"likes_nb\": \"0\",\n            \"created\": \"2017-10-31T16:22:43.806Z\",\n            \"updated\": \"2017-10-31T16:22:43.806Z\",\n            \"user\": {\n              \"id\": \"34\",\n              \"login\": \"test1\",\n              \"firstname\": \"test1\",\n              \"lastname\": \"1tset\"\n            }\n         },\n         {\n            \"id\": 2,\n            \"content\": \"Lorem ipsum ter...\",\n            \"post_id\": \"1\",\n            \"likes_nb\": \"0\",\n            \"created\": \"2017-10-31T16:22:50.864Z\",\n            \"updated\": \"2017-10-31T16:22:50.864Z\",\n            \"user\": {\n              \"id\": \"36\",\n              \"login\": \"test3\",\n              \"firstname\": \"test3\",\n              \"lastname\": \"3tset\"\n            }\n         }\n       ],\n       \"user\": {\n         \"id\": \"1\",\n         \"login\": \"test\",\n         \"firstname\": \"test\",\n         \"lastname\": \"tset\"\n       }\n    },\n    {\n       \"id\": 3,\n       \"content\": \"Lorem ipsum bis...\",\n       \"likes_nb\": \"0\",\n       \"comments_nb\": \"0\",\n       \"created\": \"2017-10-31T16:18:43.806Z\",\n       \"updated\": \"2017-10-31T16:18:43.806Z\",\n       \"comments\": null,\n       \"user\": {\n         \"id\": \"1\",\n         \"login\": \"test\",\n         \"firstname\": \"test\",\n         \"lastname\": \"tset\"\n       }\n    },\n  ],\n  \"message\": \"Retrieved posts with comments\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PostNotFound",            "description": "<p>The id of the Post was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"Posts not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/posts.js",    "groupTitle": "Post"  },  {    "type": "put",    "url": "/posts/:id",    "title": "Update a Post.",    "name": "UpdatePost",    "group": "Post",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>[Mandatory] Content of the Post.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Post unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/posts/\" + post_id, {\n\n   method: 'PUT',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   },\n\n   body: JSON.stringify({\n     \"content\": \"Lorem ipsum update...\"\n   })\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Updated post 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/posts.js",    "groupTitle": "Post"  },  {    "type": "delete",    "url": "/users/:id",    "title": "Delete a User.",    "name": "DeleteUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>User unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/users/\" + user_id, {\n\n   method: 'DELETE',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"message\": \"Deleted user 1\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/:id",    "title": "Request specific User information.",    "name": "GetUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>User unique ID (Primary key).</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/users/\" + user_id, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the post.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": 42,\n    \"firstname\": \"m\",\n    \"lastname\": \"lol\",\n    \"login\": \"aze_90\"\n  },\n  \"message\": \"Retrieved user 42\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"status\": \"error\",\n  \"message\": \"User not found\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users",    "title": "Request Users list.",    "name": "GetUsers",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>[Optional] Query string matching login, firstname or username of the users.</p>"          }        ]      }    },    "examples": [      {        "title": "Fetch example:",        "content": "fetch(\"http://localhost:3001/users?q=\" + some_query_string, {\n\n   method: 'GET',\n\n   headers: {\n     'Accept': 'application/json',\n     'Content-Type': 'application/json',\n     'Authorization': 'Bearer ' + sessionStorage.getItem(\"userToken\")\n   }\n\n })",        "type": "js"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Success status.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Content of the Users.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 42,\n      \"firstname\": \"m\",\n      \"lastname\": \"lol\",\n      \"login\": \"aze_90\"\n    },\n    {\n      \"id\": 43,\n      \"firstname\": \"n\",\n      \"lastname\": \"lal\",\n      \"login\": \"azerty_99\"\n    }\n  ],\n  \"message\": \"Retrieved users\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User"  }]
